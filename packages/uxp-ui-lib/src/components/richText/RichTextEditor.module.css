.editorContainer {
    border: 1px solid transparent;
    min-height: 150px;
    padding: 0px;
    overflow-wrap: break-word;
    transition: all 0.3s ease-in-out;
    position: relative;
    outline: none;
}

.editorWrapper {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
}

.fullScreen .editorWrapper {
    /* Pushes content down */
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    overflow: auto;
}

.fullScreen {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;

    height: 100dvh;
    background: white;
    z-index: 9999;
    padding: 0;
    margin: 0;
    border: none;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    box-sizing: border-box;
}

.toolbar {
    display: flex;
    gap: 4px;
}

.fullscreen .toolbar {
    position: fixed;
    /* Keeps it at the top */
    top: 0;
    left: 0;
    width: 100%;
    background: rgba(255, 255, 255, 0.9);
    /* Slight transparency */
    padding: 10px;
    z-index: 10000;
    /* Ensures it stays above everything */
    display: flex;
    justify-content: flex-start;
    /* Aligns buttons to the left */
    border-bottom: 1px solid #ddd;
    /* Adds a subtle separator */
}

.editorContainer div[role="textbox"] {
    padding: 5px;
}

:global(.print-preview) div[role="textbox"] {
    padding: 0;
}


/* Optional: Reduce spacing for all blocks */
.editorContainer * {
    margin: 0;
    line-height: 1.2;
}

.editorContainer ul {
    list-style-type: circle;
}

.editorContainer ul ul {
    list-style-type: square;
}

.editorContainer ul ul ul {
    list-style-type: disc;
}

.editorContainer ol {
    counter-reset: item;
}

.editorContainer ol li {
    display: block;
}

.editorContainer ol li::before {
    content: counters(item, ".") ". ";
    counter-increment: item;
}

.editorContainer ol li p {
    display: inline;
    margin: 0;
}

.editorContainer table,
.editorContainer table td,
.editorContainer table th {
    border: 1px solid transparent !important;
}


.editorContainer :global(table.has-focus),
.editorContainer :global(table.has-focus) td,
.editorContainer :global(table.has-focus) th {
    border: 1px solid #bbb !important;
}

.editorContainer :global(.resizable-image-wrapper) {
    display: inline-block;
    position: relative;
}

.editorContainer :global(.resizable-image-wrapper) img {
    max-width: 100%;
    height: auto;
    cursor: pointer;
}

.editorContainer :global(.resize-handle) {
    display: none;
    position: absolute;
    bottom: 0;
    right: 0;
    width: 22px;
    height: 22px;

    border-radius: 50%;
    cursor: nwse-resize;
    background: transparent;

    background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24' fill='none' stroke='%23007bff' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M3 21l18-18M3 10V3h7M21 14v7h-7'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-size: contain;
    background-position: center;
}

.editorContainer :global(.tiptap:focus-within) :global(.resize-handle) {
    display: block;
}

:global(.ProseMirror):not([contenteditable="true"]) :global(.ProseMirror-selectednode) {
    /* Prevents the blue outline from appearing in view mode*/
    outline: none !important;

}

:global(.ProseMirror):focus {
    outline: none;
    border-style: solid;

    border-color: var(--editor-focus-color, #1976d2);
}

:global(.ProseMirror) {
    border: 1px solid transparent;
    /* keep the border space always */
    border-radius: 4px;
    transition: border-color 0.2s ease, box-shadow 0.2s ease;
}

:global(.ProseMirror-selectednode) {
    outline-color: var(--editor-focus-color, #1976d2);

}

.floatingToolbar {
    border-radius: 8px;
    padding: 4px;
    display: flex;
    gap: 4px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    z-index: 10;
}

.editorContainer :global(.uxp-editor-attachment-node.uxp-editor-attachment-html) {

    height: 18px;
    background-color: rgba(0, 0, 0, 0.08);
    border-radius: 16px;
}

.editorContainer :global(.uxp-editor-attachment-node.uxp-editor-attachment-html) span {
    padding-left: 8px;
    padding-right: 8px;

}

.editorContainer :global(.uxp-editor-attachment-node.uxp-editor-attachment-html) span::before {
    content: '';

    display: inline-block;
    vertical-align: middle;
    margin-right: 6px;
    width: 18px;
    height: 18px;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23e0e0e0' viewBox='0 0 24 24'%3E%3Cpath d='M6 2c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm7 7V3.5L18.5 9z'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-size: contain;
    content: '';
}


.editorContainer :global(.uxp-editor-attachment-node) span {
    text-decoration: underline;
    text-decoration-color: transparent;
    text-underline-offset: 2px;
    transition:
        text-decoration-color 0.2s ease,
        font-size 0.2s ease;
    font-size: 0.875rem;
    /* Default font size (e.g., 14px) */
}

.editorContainer :global(.uxp-editor-attachment-node):hover span {
    text-decoration-color: inherit;
    font-size: 0.92rem;
    /* Slightly larger on hover */
}

/* Give a remote user a caret */
:global(.collaboration-cursor__caret) {
    border-left: 1px solid var(--editor-focus-color);
    border-right: 1px solid var(--editor-focus-color);
    margin-left: -1px;
    margin-right: -1px;
    pointer-events: none;
    position: relative;
    word-break: normal;
}

/* Render the username above the caret */
:global(.collaboration-cursor__label) {
    border-radius: 3px 3px 3px 0;
    color: var(--editor-awareness-text);
    font-size: 12px;
    font-style: normal;
    font-weight: 600;
    left: -1px;
    line-height: normal;
    padding: 0.1rem 0.3rem;
    position: absolute;
    top: -1.4em;
    user-select: none;
    white-space: nowrap;
}

.paper {
    width: 210mm;
    margin: 10mm auto;
    min-height: 297mm;
    padding: 20mm;
    background: white;
    color: black;
    box-shadow: 0 0 10mm rgba(0, 0, 0, 0.1);
    box-sizing: border-box;
}

.paper:global(.landscape) {
    width: 297mm;
    height: 210mm;
}

.pdfWrapper :global(.MuiChip-root) {
    background-color: #ddd !important;
    color: #000 !important;
    border: 1px solid #999 !important;
    print-color-adjust: exact;
    -webkit-print-color-adjust: exact;
}

.pdfWrapper :global(.MuiSvgIcon-root) {
    color: #000 !important;
}

.pdfExport :global(.MuiSvgIcon-root) {
    width: 1em !important;
    height: 1em !important;
    font-size: 1rem !important;
    vertical-align: middle !important;
}

.pdfExport :global(.uxp-video-node) :global(.react-resizable) {
    position: relative;
    border: #000 solid 1px;
    background: #f8f8f8;
    overflow: hidden;
}

/* The play icon */
.pdfExport :global(.uxp-video-node) :global(.react-resizable)::after,
.pdfExport :global(.node-youtube) :global(.react-resizable)::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    transform: translate(-50%, -50%);
    border-left: 20px solid #333;
    border-top: 12px solid transparent;
    border-bottom: 12px solid transparent;
    opacity: 0.7;
}

.pdfWrapper {
    color: black;
}

@media print {
    .paper {
        width: auto;
        height: auto;
        margin: 0mm;
        padding: 0;
        box-shadow: none;
        background: white;
    }
}

.editorWrapper [data-diff='added'], .diffLegendAdded {
    background-color: var(--mui-color-success);
}

.editorWrapper [data-diff='removed'], .diffLegendRemoved {
    background-color: var(--mui-color-error);
    text-decoration: line-through;
}

.editorWrapper [data-diff='modified'], .diffLegendModified {
    background-color: var(--mui-color-warning);
}
.editorWrapper :global(.diff-wrapper) + :global(.ProseMirror-trailingBreak) {
    display: none;
}
.editorWrapper :global(.diff-wrapper):has(> span:only-child) {
    display: inline;
  }
  
  